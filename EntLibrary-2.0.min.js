Entry.staticBlocks=[{category:"start",blocks:["when_run_button_click","when_some_key_pressed","mouse_clicked","mouse_click_cancled","when_object_click","when_object_click_canceled","when_message_cast","message_cast","message_cast_wait","when_scene_start","start_scene","start_neighbor_scene","check_object_property","check_block_execution","switch_scope","is_answer_submited","check_lecture_goal","check_variable_by_name","show_prompt","check_goal_success","positive_number","negative_number","wildcard_string","wildcard_boolean","register_score"]},{category:"flow",blocks:["wait_second","repeat_basic","repeat_inf","repeat_while_true","stop_repeat","_if","if_else","wait_until_true","stop_object","restart_project","when_clone_start","create_clone","delete_clone","remove_all_clones"]},{category:"moving",blocks:["move_direction","bounce_wall","move_x","move_y","move_xy_time","locate_x","locate_y","locate_xy","locate_xy_time","locate","locate_object_time","rotate_relative","direction_relative","rotate_by_time","direction_relative_duration","rotate_absolute","direction_absolute","see_angle_object","move_to_angle"]},{category:"looks",blocks:["show","hide","dialog_time","dialog","remove_dialog","change_to_some_shape","change_to_next_shape","add_effect_amount","change_effect_amount","erase_all_effects","change_scale_size","set_scale_size","flip_x","flip_y","change_object_index"]},{category:"brush",blocks:["brush_stamp","start_drawing","stop_drawing","set_color","set_random_color","change_thickness","set_thickness","change_brush_transparency","set_brush_tranparency","brush_erase_all"]},{category:"text",blocks:["text_read","text_write","text_append","text_prepend","text_flush"]},{category:"sound",blocks:["sound_something_with_block","sound_something_second_with_block","sound_from_to","sound_something_wait_with_block","sound_something_second_wait_with_block","sound_from_to_and_wait","sound_volume_change","sound_volume_set","sound_silent_all"]},{category:"judgement",blocks:["is_clicked","is_press_some_key","reach_something","boolean_basic_operator","boolean_and_or","boolean_not"]},{category:"calc",blocks:["calc_basic","calc_rand","coordinate_mouse","coordinate_object","get_sound_volume","quotient_and_mod","calc_operation","get_project_timer_value","choose_project_timer_action","set_visible_project_timer","get_date","distance_something","get_sound_duration","get_user_name","length_of_string","combine_something","char_at","substring","index_of_string","replace_string","change_string_case"]},{category:"variable",blocks:["variableAddButton","listAddButton","ask_and_wait","get_canvas_input_value","set_visible_answer","get_variable","change_variable","set_variable","show_variable","hide_variable","value_of_index_from_list","add_value_to_list","remove_value_from_list","insert_value_to_list","change_value_list_index","length_of_list","is_included_in_list","show_list","hide_list"]},{category:"func",blocks:["functionAddButton"]},{category:"analysis",blocks:["analizyDataAddButton","append_row_to_table","insert_row_to_table","delete_row_from_table","set_value_from_table","get_table_count","get_value_from_table","calc_values_from_table","open_table_chart","close_table_chart"]},{category:"ai_utilize",blocks:["aiUtilizeBlockAddButton","aiUtilizeModelTrainButton","audio_title","check_microphone","speech_to_text_convert","speech_to_text_get_value","get_microphone_volume","tts_title","read_text","read_text_wait_with_block","set_tts_property","translate_title","get_translated_string","check_language","video_title","video_draw_webcam","video_check_webcam","video_flip_camera","video_set_camera_opacity_option","video_motion_value","video_toggle_model","video_is_model_loaded","video_number_detect","video_toggle_ind","video_body_part_coord","video_face_part_coord","video_detected_face_info"]},{category:"expansion",blocks:["expansionBlockAddButton","weather_title","check_weather","check_finedust","get_weather_data","get_current_weather_data","get_today_temperature","check_city_weather","check_city_finedust","get_city_weather_data","get_current_city_weather_data","get_today_city_temperature","festival_title","count_festival","get_festival_info","behaviorConductDisaster_title","count_disaster_behavior","get_disaster_behavior","behaviorConductLifeSafety_title","count_lifeSafety_behavior","get_lifeSafety_behavior"]},{category:"arduino",blocks:["arduino_reconnect","arduino_open","arduino_cloud_pc_open","arduino_connect","arduino_download_connector","download_guide","arduino_download_source","arduino_noti"].concat(EntryStatic.DynamicHardwareBlocks)}],EntryStatic.getAllBlocks=(()=>Entry.staticBlocks),Entry.customCategories=[],Entry.CustomBlock=class{constructor(e){this.type=e,this.meta_={color:"#000000",fontColor:"#FFFFFF",outerLine:"#000000",skeleton:"basic",statement:[],params:[],events:{},def:{params:[],type:this.type},paramsKeyMap:{},class:"default",func:()=>{console.warn("Warning: Block's Action is not defined")},template:"no-template-created"}}setTemplate(e){return this.meta_.template=e,this}setColor(e,t,a){return e&&/#[0-9a-fA-F]{6}/.test(e)&&(this.meta_.color=e),t&&/#[0-9a-fA-F]{6}/.test(t)&&(this.meta_.outerLine=t),a&&/#[0-9a-fA-F]{6}/.test(a)&&(this.meta_.fontColor=a),this}setSkeleton(e){return this.meta_.skeleton=e,this}setParams(...e){return 1==e.length&&"object"==typeof e[0]&&(e=e[0]),this.meta_.params=[],this.meta_.def.params=[],this.meta_.paramsKeyMap={},e.forEach((e,t)=>{this.meta_.params.push(e.data),this.meta_.def.params.push(e.def||null),e.name&&(this.meta_.paramsKeyMap[e.name]=t)}),this}addEvent(e,t){return"Array"!=typeof this.meta_.events[e]&&(this.meta_.events[e]=[]),this.meta_.events[e].push(t),this}setClass(e){return this.meta_.class=e,this}setAction(e){return this.meta_.func=e,this}attach(){return Entry.block[this.type]=this.meta_,this}mutate(){if(console.log("Updating Category..."),this.attach(),window.useWebGL)console.warn("Working on play mode... This will have some bugs");else{Entry.Mutator.mutate(this.type,{template:this.meta_.template,params:this.meta_.params},this.meta_),Entry.playground.mainWorkspace.blockMenu.clearCategory(),Entry.playground.mainWorkspace.blockMenu._generateCategoryView([{category:"start",visible:!0},{category:"flow",visible:!0},{category:"moving",visible:!0},{category:"looks",visible:!0},{category:"brush",visible:!0},{category:"text",visible:!0},{category:"sound",visible:!0},{category:"judgement",visible:!0},{category:"calc",visible:!0},{category:"variable",visible:!0},{category:"func",visible:!0},{category:"analysis",visible:!0},{category:"ai_utilize",visible:!0},{category:"expansion",visible:!0}].concat(...Entry.customCategories.map(e=>({category:e,visible:!0}))).concat({category:"arduino",visible:!0}));for(let e=0;e<$(".entryCategoryElementWorkspace").length;e++)"entryCategorytext"!=$($(".entryCategoryElementWorkspace")[e]).attr("id")&&$($(".entryCategoryElementWorkspace")[e]).attr("class","entryCategoryElementWorkspace");Entry.playground.blockMenu._categoryData=EntryStatic.getAllBlocks(),Entry.playground.blockMenu._generateCategoryCodes(["start","flow","moving","looks","brush","text","sound","judgement","calc","variable","func","analysis","ai_utilize","expansion"].concat(...Entry.customCategories).concat("arduino"))}return this}},Entry.addBlockToDefaultCategory=((e,...t)=>(Entry.staticBlocks.find(t=>t.category==e).blocks.push(...t),{mutate(){if(console.log("Updating Category..."),window.useWebGL)console.warn("Working on play mode... This will have some bugs");else{Entry.playground.mainWorkspace.blockMenu.clearCategory(),Entry.playground.mainWorkspace.blockMenu._generateCategoryView([{category:"start",visible:!0},{category:"flow",visible:!0},{category:"moving",visible:!0},{category:"looks",visible:!0},{category:"brush",visible:!0},{category:"text",visible:!0},{category:"sound",visible:!0},{category:"judgement",visible:!0},{category:"calc",visible:!0},{category:"variable",visible:!0},{category:"func",visible:!0},{category:"analysis",visible:!0},{category:"ai_utilize",visible:!0},{category:"expansion",visible:!0}].concat(...Entry.customCategories.map(e=>({category:e,visible:!0}))).concat({category:"arduino",visible:!0}));for(let e=0;e<$(".entryCategoryElementWorkspace").length;e++)"entryCategorytext"!=$($(".entryCategoryElementWorkspace")[e]).attr("id")&&$($(".entryCategoryElementWorkspace")[e]).attr("class","entryCategoryElementWorkspace");Entry.playground.blockMenu._categoryData=EntryStatic.getAllBlocks(),Entry.playground.blockMenu._generateCategoryCodes(["start","flow","moving","looks","brush","text","sound","judgement","calc","variable","func","analysis","ai_utilize","expansion"].concat(...Entry.customCategories).concat("arduino")),Entry.getMainWS().blockMenu.view.find(".entryCategoryElementWorkspace")[0].click()}}})),Entry.CustomCategory=class{constructor(e="undefined"){this.categoryName=e,this.meta_={text:"CustomCategory",cssID:Entry.Utils.generateId(),back:[{color:"transparent",image:"/lib/entry-js/images/hardware.svg"},{color:"#00B6B1",image:"/lib/entry-js/images/hardware_on.svg"}]},Entry.staticBlocks.push({category:e,blocks:[]}),Entry.customCategories.push(e)}addBlock(...e){return Entry.staticBlocks.find(e=>e.category==this.categoryName).blocks.push(...e),this}setText(e){return this.meta_.text=e,this}setBackground(e,t,a){if("off"==e)t&&(/#[0-9a-fA-F]{6}/.test(t)||"transparent"==t)&&(this.meta_.back[0].color=t),a&&(this.meta_.back[0].image=a);else{if("on"!=e)throw new Error("Invalid type! set to off or on");t&&(/#[0-9a-fA-F]{6}/.test(t)||"transparent"==t)&&(this.meta_.back[1].color=t),a&&(this.meta_.back[1].image=a)}return this}mutate(){if(console.log("Updating Category..."),window.useWebGL)console.warn("Working on play mode... This will have some bugs");else{$(`#EntLibrary_Category_${this.meta_.cssID}`).remove(),$("head").append(`<style id="EntLibrary_Category_${this.meta_.cssID}">#entryCategory${this.categoryName} {background-repeat: no-repeat;background-color: ${this.meta_.back[0].color};background-image: url(${this.meta_.back[0].image});border-color: ${this.meta_.back[0].color};}.entrySelectedCategory#entryCategory${this.categoryName} {background-repeat: no-repeat !important;background-color: ${this.meta_.back[1].color} !important;background-image: url(${this.meta_.back[1].image}) !important;border-color: ${this.meta_.back[1].color} !important;}</style>`),Entry.playground.mainWorkspace.blockMenu.clearCategory(),Entry.playground.mainWorkspace.blockMenu._generateCategoryView([{category:"start",visible:!0},{category:"flow",visible:!0},{category:"moving",visible:!0},{category:"looks",visible:!0},{category:"brush",visible:!0},{category:"text",visible:!0},{category:"sound",visible:!0},{category:"judgement",visible:!0},{category:"calc",visible:!0},{category:"variable",visible:!0},{category:"func",visible:!0},{category:"analysis",visible:!0},{category:"ai_utilize",visible:!0},{category:"expansion",visible:!0}].concat(...Entry.customCategories.map(e=>({category:e,visible:!0}))).concat({category:"arduino",visible:!0}));for(let e=0;e<$(".entryCategoryElementWorkspace").length;e++)"entryCategorytext"!=$($(".entryCategoryElementWorkspace")[e]).attr("id")&&$($(".entryCategoryElementWorkspace")[e]).attr("class","entryCategoryElementWorkspace");Entry.playground.blockMenu._categoryData=EntryStatic.getAllBlocks(),Entry.playground.blockMenu._generateCategoryCodes(["start","flow","moving","looks","brush","text","sound","judgement","calc","variable","func","analysis","ai_utilize","expansion"].concat(...Entry.customCategories).concat("arduino")),$(`#entryCategory${this.categoryName}`).text(this.meta_.text)}return this}};const EntLibrary={CustomBlock:Entry.CustomBlock,CustomCategory:Entry.CustomCategory,addBlockToDefaultCategory:Entry.addBlockToDefaultCategory};