Entry.captureBoardManager={stage:null,canvas:null,get CANVAS_MAX_WIDTH(){return 480},get CANVAS_MAX_HEIGHT(){return 270},set CANVAS_MAX_WIDTH(e){throw new Error("Cannot re-define property 'CANVAS_MAX_WIDTH'")},set CANVAS_MAX_HEIGHT(e){throw new Error("Cannot re-define property 'CANVAS_MAX_HEIGHT'")},createCanvas(e=!1){if(e)document.querySelector("#entryCapturedCanvas")&&document.querySelector("#entryCapturedCanvas").remove(),document.querySelector("#entryCanvas").insertAdjacentHTML("afterend",`<canvas id="entryCapturedCanvas" width="${this.CANVAS_MAX_WIDTH}" height="${this.CANVAS_MAX_HEIGHT}" class="entryCanvasCapturedWorkspace" style="width: 100%;"></canvas>`),this.stage=new createjs.Stage("entryCapturedCanvas"),this.canvas=document.querySelector("#entryCapturedCanvas");else{const e=document.createElement("template");e.innerHTML=`<canvas id="entryCapturedCanvas" width="${this.CANVAS_MAX_WIDTH}" height="${this.CANVAS_MAX_HEIGHT}" class="entryCanvasCapturedWorkspace" style="width: 100%;"></canvas>`,this.canvas=e.content.children[0].cloneNode(!0),this.stage=new createjs.Stage(this.canvas)}},async captureCanvas(){this.canvas||this.createCanvas();const e=this.stage||new createjs.Stage("entryCapturedCanvas"),t=e=>new Promise(t=>{const n=new Image;n.onload=(()=>t(n)),n.src=e}),n=Entry.container.getCurrentObjects();for(let a=0;a<n.length;a++){let i;const r=n[a];if("sprite"==r.objectType){const n=await t(r.selectedPicture.fileurl||`/uploads/${r.selectedPicture.filename.substr(0,2)}/${r.selectedPicture.filename.substr(2,2)}/image/${r.selectedPicture.filename}.${r.selectedPicture.imageType||"png"}`),s=new createjs.Bitmap(n);s.regX=r.entity.regX,s.regY=r.entity.regY,s.x=this.CANVAS_MAX_WIDTH/2+r.entity.x,s.y=this.CANVAS_MAX_HEIGHT/2+-1*r.entity.y,s.scaleX=r.entity.scaleX*(r.entity.width/s.image.width),s.scaleY=r.entity.scaleY*(r.entity.height/s.image.height),s.zIndex=a,s.alpha=r.entity.object.alpha,i=s,e.addChild(s)}else{const t=new createjs.Container,n=new createjs.Text(r.text,`${r.entity.fontSize}px ${r.entity.fontType}`,r.entity.colour);n.textAlign=r.entity.object.children[1].textAlign,n.textBaseline=r.entity.object.children[1].textBaseline;const s=new createjs.Shape;s.graphics.beginFill(r.entity.bgColor).drawRect(0,-n.getMeasuredHeight()/2,n.getMeasuredWidth(),n.getMeasuredHeight()).endFill(),t.addChild(s,n),t.zIndex=a,t.x=this.CANVAS_MAX_WIDTH/2+r.entity.x,t.y=this.CANVAS_MAX_HEIGHT/2+-1*r.entity.y,t.scaleX=r.entity.scaleX,t.scaleY=r.entity.scaleY,i=t,e.addChild(t)}if(r.entity.dialog){const[t,n]=[r.entity.dialog.width,r.entity.dialog.height],a=new createjs.Container,s=new createjs.Shape,o=new createjs.Shape,c=new createjs.Text(r.entity.dialog.message_,"15px NanumGothic","#000000"),l=10;switch(s.graphics.beginFill("#ffffff").setStrokeStyle(2,"round").beginStroke("#4f80ff").drawRoundRect(-10,-10,t+2*l,n+2*l,10),r.entity.dialog.notch.type){case"ne":o.graphics.beginFill("#ffffff").setStrokeStyle(3,2).beginStroke("#ffffff").moveTo(3,n+l).lineTo(11,n+l).setStrokeStyle(2,1,1).beginStroke("#4f80ff").moveTo(2,n+l).lineTo(2,n+9+l).lineTo(12,n+l);break;case"nw":o.graphics.beginFill("#ffffff").setStrokeStyle(3,2).beginStroke("#ffffff").moveTo(t-3,n+l).lineTo(t-11,n+l).setStrokeStyle(2,1,1).beginStroke("#4f80ff").moveTo(t-2,n+l).lineTo(t-2,n+9+l).lineTo(t-12,n+l);break;case"se":o.graphics.beginFill("#ffffff").setStrokeStyle(3,2).beginStroke("#ffffff").moveTo(3,-l).lineTo(11,-l).setStrokeStyle(2,1,1).beginStroke("#4f80ff").moveTo(2,-l).lineTo(2,-l-9).lineTo(12,-l);break;case"sw":o.graphics.beginFill("#ffffff").setStrokeStyle(3,2).beginStroke("#ffffff").moveTo(t-3,-l).lineTo(t-11,-l).setStrokeStyle(2,1,1).beginStroke("#4f80ff").moveTo(t-2,-l).lineTo(t-2,-l-9).lineTo(t-12,-l)}a.addChild(s),a.addChild(o),a.addChild(c),a.regX=a.getBounds().width/2,a.regY=a.getBounds().height/2,a.x=i.x-r.entity.object.x+r.entity.dialog.object.x,a.y=i.y-r.entity.object.y+r.entity.dialog.object.y,e.addChild(a)}if(r.entity.object.filters.length){r.entity.effect;r.entity.object.filters.forEach(e=>{if(e instanceof createjs.ColorMatrixFilter){const t=e.matrix.toArray(),n=new createjs.ColorMatrix;t.forEach((e,t)=>n[t]=e);const a=new createjs.ColorMatrixFilter(n);i.filters||(i.filters=[]),i.filters.push(a)}}),i.cache(0,0,i.getBounds().width,i.getBounds().height)}e.sortChildren((e,t)=>(t.zIndex||0)-(e.zIndex||0))}e.update()}},Entry.captureBoardManager.noConflict=(e=>()=>(delete Entry.captureBoardManager,window.captureBoardManager=void 0,e))(Entry.captureBoardManager),window.captureBoardManager=Entry.captureBoardManager;
